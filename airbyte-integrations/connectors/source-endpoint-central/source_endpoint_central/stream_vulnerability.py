from typing import Any, Iterable, List, Mapping, Optional

import requests

from .bases import DesktopCentralStream, SummaryOverride, DesktopCentralThreatStream

class Vulnerabilities(DesktopCentralThreatStream):
    # NOTE: Important note about this stream - as of today there isn't any data in our hosted
    #       instance so I can't work out the schema. Thus, the schema we've got right now is an
    #       empty object that covers basically anything that might be there. 
    primary_key = None
    envelope_name = None

    def path(
        self, stream_state: Mapping[str, Any] = None, stream_slice: Mapping[str, Any] = None, next_page_token: Mapping[str, Any] = None
    ) -> str:
        """
        Override this method to define the path this stream corresponds to. E.g. if the url is https://example-api.com/v1/customers then this
        should return "customers". Required.
        """
        return "/dcapi/threats/vulnerabilities"
    
    
class SystemVulnerabilities(DesktopCentralThreatStream):
    # NOTE: Important note about this stream - as of today there isn't any data in our hosted
    #       instance so I can't work out the schema. Thus, the schema we've got right now is an
    #       empty object that covers basically anything that might be there. 
    primary_key = None
    envelope_name = None

    def path(
        self, stream_state: Mapping[str, Any] = None, stream_slice: Mapping[str, Any] = None, next_page_token: Mapping[str, Any] = None
    ) -> str:
        """
        Override this method to define the path this stream corresponds to. E.g. if the url is https://example-api.com/v1/customers then this
        should return "customers". Required.
        """
        return "/dcapi/threats/systemreport/vulnerabilities"
    
class SystemMisconfiguration(DesktopCentralThreatStream):
    # NOTE: Important note about this stream - as of today there isn't any data in our hosted
    #       instance so I can't work out the schema. Thus, the schema we've got right now is an
    #       empty object that covers basically anything that might be there. 
    primary_key = None
    envelope_name = None

    def path(
        self, stream_state: Mapping[str, Any] = None, stream_slice: Mapping[str, Any] = None, next_page_token: Mapping[str, Any] = None
    ) -> str:
        """
        Override this method to define the path this stream corresponds to. E.g. if the url is https://example-api.com/v1/customers then this
        should return "customers". Required.
        """
        return "/dcapi/threats/systemmisconfigurations"
    
class SystemMisconfiguration(DesktopCentralThreatStream):
    # NOTE: Important note about this stream - as of today there isn't any data in our hosted
    #       instance so I can't work out the schema. Thus, the schema we've got right now is an
    #       empty object that covers basically anything that might be there. 
    primary_key = None
    envelope_name = None

    def path(
        self, stream_state: Mapping[str, Any] = None, stream_slice: Mapping[str, Any] = None, next_page_token: Mapping[str, Any] = None
    ) -> str:
        """
        Override this method to define the path this stream corresponds to. E.g. if the url is https://example-api.com/v1/customers then this
        should return "customers". Required.
        """
        return "/dcapi/threats/systemmisconfigurations"

class SystemReportMisconfiguration(DesktopCentralThreatStream):
    # NOTE: Important note about this stream - as of today there isn't any data in our hosted
    #       instance so I can't work out the schema. Thus, the schema we've got right now is an
    #       empty object that covers basically anything that might be there. 
    primary_key = None
    envelope_name = None

    def path(
        self, stream_state: Mapping[str, Any] = None, stream_slice: Mapping[str, Any] = None, next_page_token: Mapping[str, Any] = None
    ) -> str:
        """
        Override this method to define the path this stream corresponds to. E.g. if the url is https://example-api.com/v1/customers then this
        should return "customers". Required.
        """
        return "/dcapi/threats/systemreport/systemmisconfigurations"

class ServerMisconfiguration(DesktopCentralThreatStream):
    # NOTE: Important note about this stream - as of today there isn't any data in our hosted
    #       instance so I can't work out the schema. Thus, the schema we've got right now is an
    #       empty object that covers basically anything that might be there. 
    primary_key = None
    envelope_name = None

    def path(
        self, stream_state: Mapping[str, Any] = None, stream_slice: Mapping[str, Any] = None, next_page_token: Mapping[str, Any] = None
    ) -> str:
        """
        Override this method to define the path this stream corresponds to. E.g. if the url is https://example-api.com/v1/customers then this
        should return "customers". Required.
        """
        return "/dcapi/threats/servermisconfigurations"
    
class SystemServerMisconfiguration(DesktopCentralThreatStream):
    # NOTE: Important note about this stream - as of today there isn't any data in our hosted
    #       instance so I can't work out the schema. Thus, the schema we've got right now is an
    #       empty object that covers basically anything that might be there. 
    primary_key = None
    envelope_name = None

    def path(
        self, stream_state: Mapping[str, Any] = None, stream_slice: Mapping[str, Any] = None, next_page_token: Mapping[str, Any] = None
    ) -> str:
        """
        Override this method to define the path this stream corresponds to. E.g. if the url is https://example-api.com/v1/customers then this
        should return "customers". Required.
        """
        return "/dcapi/threats/systemreport/servermisconfigurations"
    
class SystemReportThreats(DesktopCentralThreatStream):
    # NOTE: Important note about this stream - as of today there isn't any data in our hosted
    #       instance so I can't work out the schema. Thus, the schema we've got right now is an
    #       empty object that covers basically anything that might be there. 
    primary_key = None
    envelope_name = None

    def path(
        self, stream_state: Mapping[str, Any] = None, stream_slice: Mapping[str, Any] = None, next_page_token: Mapping[str, Any] = None
    ) -> str:
        """
        Override this method to define the path this stream corresponds to. E.g. if the url is https://example-api.com/v1/customers then this
        should return "customers". Required.
        """
        return "/dcapi/threats/systemreport"